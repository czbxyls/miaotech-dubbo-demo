#====================================mybatis config===============================================
#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=com.miaotech.user.infra.repo.entity
#指定MybatisPlus的设置表名前缀
mybatis-plus.global-config.db-config.table-prefix=t_
mybatis-plus.mapper-locations=classpath:mappers/*xml


#====================================spring config===============================================
# 数据库驱动：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.name=defaultDataSource
# 数据库连接地址
spring.datasource.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.username=root
spring.datasource.password=123456&


#====================================druid config===============================================
#配置连接池为Druid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.max-active=10
spring.datasource.druid.min-idle=2
spring.datasource.druid.initial-size=2
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false

#====================================seata config===============================================
seata.enabled=true
spring.cloud.alibaba.seata.tx-service-group=business-service
seata.service.vgroup-mapping.business-service=default
seata.service.grouplist.default=127.0.0.1:8091
seata.service.grouplist.seata-server=127.0.0.1:8091
seata.service.disable-global-transaction=false

## if use registry center
#seata.registry.type=nacos
#seata.registry.nacos.cluster=default
#seata.registry.nacos.server-addr=localhost
#

#====================================dubbo config===============================================
dubbo.application.id=${spring.application.name}
dubbo.application.name=${spring.application.name}
dubbo.application.qosEnable=false

# dubbo 协议
dubbo.registry.id=${spring.application.name}-registry
dubbo.registry.address=nacos://127.0.0.1:8848
dubbo.registry.timeout=10000
dubbo.registry.simplified=true

dubbo.metadata-report.address=nacos://127.0.0.1:8848
dubbo.protocol.accesslog=logs/access.log

dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
# dubbo 协议端口（ -1 表示自增端口，从 20880 开始）
dubbo.protocol.port=20880
# Dubbo 消费端订阅服务端的应用名，多个服务提供者用逗号分隔
# 这里订阅"自己"，会被忽略掉，请根据实际情况添加
dubbo.cloud.subscribed-services=miaotech-user-provider

# dubbo 服务扫描基准包
dubbo.scan.base-packages=com.miaotech.user.app
# dubbo 服务的Filter
dubbo.provider.filter=-accesslog,accesslog2,-exception,exception2,default,serverFilter

#====================================redis config===============================================
# redis配置
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
#spring.redis.password
#spring.redis.cluster.nodes[0]=127.0.0.1:6379
#spring.redis.cluster.nodes[1]=127.0.0.1:6380
#spring.redis.cluster.nodes[2]=127.0.0.1:6381
#spring.redis.cluster.nodes[3]=127.0.0.1:6382
# 连接池中的最大空闲连接 默认8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-wait=-1
spring.redis.timeout=30000


#====================================custom config===============================================
# 版本号
service.version=1.0.0
#配置是否启用定时任务
server.scheduling.enable=false

#分布式ID相关配置文件
server.id.workId=10
server.id.dataCenterId=1

logging.level.com.alibaba.nacos.client.naming=warn


